<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jobs on Yehh</title>
    <link>https://blog.yehaohui.com/zh-cn/tag/jobs/</link>
    <description>Recent content in jobs on Yehh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 09 Feb 2023 13:01:23 +0800</lastBuildDate><atom:link href="https://blog.yehaohui.com/zh-cn/tag/jobs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>链表(下)</title>
      <link>https://blog.yehaohui.com/zh-cn/2023/02/09/leetcode_day3/</link>
      <pubDate>Thu, 09 Feb 2023 13:01:23 +0800</pubDate>
      
      <guid>https://blog.yehaohui.com/zh-cn/2023/02/09/leetcode_day3/</guid>
      <description>链表(下) leetcode 206. 简单一遍过 给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。 /** * Definition for singly-linked list. * type ListNode struct { * Val int * Next *ListNode * } */ func reverseList(head *ListNode) *ListNode { if head==nil || head.Next==nil{ return</description>
    </item>
    
    <item>
      <title>模拟，链表(上)</title>
      <link>https://blog.yehaohui.com/zh-cn/2023/02/07/leetcode_day2/</link>
      <pubDate>Tue, 07 Feb 2023 13:01:23 +0800</pubDate>
      
      <guid>https://blog.yehaohui.com/zh-cn/2023/02/07/leetcode_day2/</guid>
      <description>模拟，链表(上) 模拟 以leetcode 59.螺旋矩阵为例: 相信很多同学刚开始做这种题目的时候，上来就是一波判断猛如虎。 结果运行的时候各种问题</description>
    </item>
    
    <item>
      <title>二分查找，双指针，滑动窗口</title>
      <link>https://blog.yehaohui.com/zh-cn/2023/02/05/leetcode_day1/</link>
      <pubDate>Sun, 05 Feb 2023 16:01:23 +0800</pubDate>
      
      <guid>https://blog.yehaohui.com/zh-cn/2023/02/05/leetcode_day1/</guid>
      <description>23-02-05 刷题记录 基本是跟着代码随想录刷的，day1刷了二分查找，滑窗还有双指针。记录一下当时的思路。 二分查找 二分查找突出的是一个熟练，针对已有的两</description>
    </item>
    
  </channel>
</rss>
